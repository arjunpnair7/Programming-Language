

Expression -> Binary | Unary | Number
Binary -> Expression (+ | - | * | /) Expression
Unary -> (-)* Expression
Literal -> String | Number


Expr -> Product (+ Product)* | Product (- Product)*
Product -> Unary (x Unary)* | Unary (/ Unary)*
Unary -> -* Q | Q
Q -> Literal | '('Expr')'

5 * 2 + 3
(7 * 2) + (5 * 4)
3 - -7

3 - 3 - 3
3 - - - 7

(3 + 4) * (1 + 2)

- - 7